version: '3.1'

services:

  # Frontend
  frontend-service:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    restart: on-failure
    ports:
      - 3000:3000
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - /app/node_modules
      - ./frontend:/app

  # Backend
  backend-service:
   build:
     dockerfile: Dockerfile
     context: ./backend
   restart: on-failure
   ports:
     - 8080:8080
   environment:
     SERVER_PORT: 8080
     MONGODB_HOST: mongodb
     MONGODB_PORT: 27017
     ELASTICSEARCH_HOST: elasticsearch
     ELASTICSEARCH_PORT: 9200

  mongodb:
    container_name: mongodb
    build:
      dockerfile: Dockerfile
      context: ./mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
    restart: on-failure
    #ports:
      #- 27017:27017
      
  elasticsearch:
    image: elasticsearch:8.3.3
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
    #ports:
      #- 9200:9200
    restart: on-failure

  mongo-express:
    image: mongo-express:0.54.0
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
    links:
      - "mongodb"
    depends_on:
      - "mongodb"